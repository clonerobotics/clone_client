"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PinchValveCommands:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PinchValveCommandsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PinchValveCommands.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RESERVED: _PinchValveCommands.ValueType  # 0
    ENABLE_STEPPER_DRIVER: _PinchValveCommands.ValueType  # 1
    DISABLE_STEPPER_DRIVER: _PinchValveCommands.ValueType  # 2
    ENABLE_STEPPER_VBOOST: _PinchValveCommands.ValueType  # 3
    DISABLE_STEPPER_VBOOST: _PinchValveCommands.ValueType  # 4

class PinchValveCommands(_PinchValveCommands, metaclass=_PinchValveCommandsEnumTypeWrapper): ...

RESERVED: PinchValveCommands.ValueType  # 0
ENABLE_STEPPER_DRIVER: PinchValveCommands.ValueType  # 1
DISABLE_STEPPER_DRIVER: PinchValveCommands.ValueType  # 2
ENABLE_STEPPER_VBOOST: PinchValveCommands.ValueType  # 3
DISABLE_STEPPER_VBOOST: PinchValveCommands.ValueType  # 4
global___PinchValveCommands = PinchValveCommands

@typing.final
class SendDirectMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ID_FIELD_NUMBER: builtins.int
    VALVES_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    valves: builtins.int
    def __init__(
        self,
        *,
        node_id: builtins.int = ...,
        valves: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["node_id", b"node_id", "valves", b"valves"]) -> None: ...

global___SendDirectMessage = SendDirectMessage

@typing.final
class SendManyDirectMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.int, builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data"]) -> None: ...

global___SendManyDirectMessage = SendManyDirectMessage

@typing.final
class ImpulseControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALVES_FIELD_NUMBER: builtins.int
    DELAY_FIELD_NUMBER: builtins.int
    valves: builtins.int
    delay: builtins.int
    def __init__(
        self,
        *,
        valves: builtins.int = ...,
        delay: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["delay", b"delay", "valves", b"valves"]) -> None: ...

global___ImpulseControl = ImpulseControl

@typing.final
class SendImpulseMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ID_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    @property
    def control(self) -> global___ImpulseControl: ...
    def __init__(
        self,
        *,
        node_id: builtins.int = ...,
        control: global___ImpulseControl | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["control", b"control"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["control", b"control", "node_id", b"node_id"]) -> None: ...

global___SendImpulseMessage = SendImpulseMessage

@typing.final
class SendManyImpulseMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___ImpulseControl: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___ImpulseControl | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___ImpulseControl]: ...
    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.int, global___ImpulseControl] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data"]) -> None: ...

global___SendManyImpulseMessage = SendManyImpulseMessage

@typing.final
class SendPulseMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ID_FIELD_NUMBER: builtins.int
    VALVE_ID_FIELD_NUMBER: builtins.int
    PULSE_LEN_MS_FIELD_NUMBER: builtins.int
    DELAY_LEN_MS_FIELD_NUMBER: builtins.int
    DURATION_MS_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    valve_id: builtins.int
    pulse_len_ms: builtins.int
    delay_len_ms: builtins.int
    duration_ms: builtins.int
    def __init__(
        self,
        *,
        node_id: builtins.int = ...,
        valve_id: builtins.int = ...,
        pulse_len_ms: builtins.int = ...,
        delay_len_ms: builtins.int = ...,
        duration_ms: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["delay_len_ms", b"delay_len_ms", "duration_ms", b"duration_ms", "node_id", b"node_id", "pulse_len_ms", b"pulse_len_ms", "valve_id", b"valve_id"]) -> None: ...

global___SendPulseMessage = SendPulseMessage

@typing.final
class PressureControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRESSURES_FIELD_NUMBER: builtins.int
    @property
    def pressures(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        pressures: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["pressures", b"pressures"]) -> None: ...

global___PressureControl = PressureControl

@typing.final
class SendManyPressureMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___PressureControl: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___PressureControl | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___PressureControl]: ...
    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.int, global___PressureControl] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data"]) -> None: ...

global___SendManyPressureMessage = SendManyPressureMessage

@typing.final
class PinchValveControl(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _PositionsType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _PositionsTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PinchValveControl._PositionsType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        POSITION_UNKNOWN: PinchValveControl._PositionsType.ValueType  # 0
        """Cam position unknown"""
        BOTH_CLOSED: PinchValveControl._PositionsType.ValueType  # 1
        """Both inlet and outlet are closed"""
        BOTH_OPENED: PinchValveControl._PositionsType.ValueType  # 2
        """Both inlet and outlet are opened, AKA flush"""
        INLET_FULLY_OPENED: PinchValveControl._PositionsType.ValueType  # 3
        """Inlet valve fully opened"""
        INLET_PARTIALLY_OPENED: PinchValveControl._PositionsType.ValueType  # 4
        """Inlet valve opened, but only partially"""
        OUTLET_FULLY_OPENED: PinchValveControl._PositionsType.ValueType  # 5
        """Outlet valve fully opened"""
        OUTLET_PARTIALLY_OPENED: PinchValveControl._PositionsType.ValueType  # 6
        """Outlet valve opened, but only partially"""

    class PositionsType(_PositionsType, metaclass=_PositionsTypeEnumTypeWrapper): ...
    POSITION_UNKNOWN: PinchValveControl.PositionsType.ValueType  # 0
    """Cam position unknown"""
    BOTH_CLOSED: PinchValveControl.PositionsType.ValueType  # 1
    """Both inlet and outlet are closed"""
    BOTH_OPENED: PinchValveControl.PositionsType.ValueType  # 2
    """Both inlet and outlet are opened, AKA flush"""
    INLET_FULLY_OPENED: PinchValveControl.PositionsType.ValueType  # 3
    """Inlet valve fully opened"""
    INLET_PARTIALLY_OPENED: PinchValveControl.PositionsType.ValueType  # 4
    """Inlet valve opened, but only partially"""
    OUTLET_FULLY_OPENED: PinchValveControl.PositionsType.ValueType  # 5
    """Outlet valve fully opened"""
    OUTLET_PARTIALLY_OPENED: PinchValveControl.PositionsType.ValueType  # 6
    """Outlet valve opened, but only partially"""

    class _ControlMode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ControlModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PinchValveControl._ControlMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        RESERVED: PinchValveControl._ControlMode.ValueType  # 0
        ANGLE: PinchValveControl._ControlMode.ValueType  # 1
        PRESSURE: PinchValveControl._ControlMode.ValueType  # 2
        POSITIONS: PinchValveControl._ControlMode.ValueType  # 3

    class ControlMode(_ControlMode, metaclass=_ControlModeEnumTypeWrapper): ...
    RESERVED: PinchValveControl.ControlMode.ValueType  # 0
    ANGLE: PinchValveControl.ControlMode.ValueType  # 1
    PRESSURE: PinchValveControl.ControlMode.ValueType  # 2
    POSITIONS: PinchValveControl.ControlMode.ValueType  # 3

    MODE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    mode: global___PinchValveControl.ControlMode.ValueType
    value: builtins.int
    def __init__(
        self,
        *,
        mode: global___PinchValveControl.ControlMode.ValueType = ...,
        value: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["mode", b"mode", "value", b"value"]) -> None: ...

global___PinchValveControl = PinchValveControl

@typing.final
class SendPinchValveControlMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ID_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    @property
    def control(self) -> global___PinchValveControl: ...
    def __init__(
        self,
        *,
        node_id: builtins.int = ...,
        control: global___PinchValveControl | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["control", b"control"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["control", b"control", "node_id", b"node_id"]) -> None: ...

global___SendPinchValveControlMessage = SendPinchValveControlMessage

@typing.final
class SendManyPinchValveControlMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___PinchValveControl: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___PinchValveControl | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___PinchValveControl]: ...
    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.int, global___PinchValveControl] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data"]) -> None: ...

global___SendManyPinchValveControlMessage = SendManyPinchValveControlMessage

@typing.final
class GetNodesMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRODUCT_ID_FIELD_NUMBER: builtins.int
    product_id: builtins.int
    """bool rediscover = 1;"""
    def __init__(
        self,
        *,
        product_id: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_product_id", b"_product_id", "product_id", b"product_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_product_id", b"_product_id", "product_id", b"product_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_product_id", b"_product_id"]) -> typing.Literal["product_id"] | None: ...

global___GetNodesMessage = GetNodesMessage

@typing.final
class BusDevice(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ID_FIELD_NUMBER: builtins.int
    PRODUCT_ID_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    product_id: builtins.int
    def __init__(
        self,
        *,
        node_id: builtins.int = ...,
        product_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["node_id", b"node_id", "product_id", b"product_id"]) -> None: ...

global___BusDevice = BusDevice

@typing.final
class NodeList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODES_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BusDevice]: ...
    def __init__(
        self,
        *,
        nodes: collections.abc.Iterable[global___BusDevice] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["nodes", b"nodes"]) -> None: ...

global___NodeList = NodeList

@typing.final
class NodeMap(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class NodesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___NodeList: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___NodeList | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    NODES_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___NodeList]: ...
    def __init__(
        self,
        *,
        nodes: collections.abc.Mapping[builtins.str, global___NodeList] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["nodes", b"nodes"]) -> None: ...

global___NodeMap = NodeMap

@typing.final
class SendPinchValveCommandMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ID_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    command: global___PinchValveCommands.ValueType
    def __init__(
        self,
        *,
        node_id: builtins.int = ...,
        command: global___PinchValveCommands.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["command", b"command", "node_id", b"node_id"]) -> None: ...

global___SendPinchValveCommandMessage = SendPinchValveCommandMessage

@typing.final
class SendManyPinchValveCommandMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class CommandsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: global___PinchValveCommands.ValueType
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___PinchValveCommands.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    COMMANDS_FIELD_NUMBER: builtins.int
    @property
    def commands(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, global___PinchValveCommands.ValueType]: ...
    def __init__(
        self,
        *,
        commands: collections.abc.Mapping[builtins.int, global___PinchValveCommands.ValueType] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["commands", b"commands"]) -> None: ...

global___SendManyPinchValveCommandMessage = SendManyPinchValveCommandMessage
