syntax="proto3";

import "google/protobuf/empty.proto";
import "clone_client/proto/data_types.proto";

package clone.state_store;

service StateStoreReceiverGRPC {
  rpc SubscribeTelemetry (google.protobuf.Empty) returns (stream TelemetryDataResponse);
  rpc GetTelemetry (google.protobuf.Empty) returns (TelemetryDataResponse);
  rpc GetSystemInfo (google.protobuf.Empty) returns (SystemInfoResponse);
  rpc Ping (google.protobuf.Empty) returns (google.protobuf.Empty);
}

message IMUData {
  uint32 node_id=1;
  float w=2;
  float x=3;
  float y=4;
  float z=5;
  float ax=6;
  float ay=7;
  float az=8;
}

message MagneticSensor {
    message MagneticPixel {
        int32 x=1;
        int32 y=2;
        int32 z=3;
    }
    repeated MagneticPixel pixels = 1;
    int32 temperature = 5;
}

message MagneticHubRaw {
    uint32 node_id=1;
    repeated MagneticSensor sensors=2;
}

message GaussRiderRaw {
    uint32 node_id=1;
    MagneticSensor sensor=2;
}

message SensorData {
  repeated float pressures=1;
  repeated IMUData rot=2;
  repeated MagneticHubRaw magnetic_data=3; // Unprocessed magnetic hub's data - currently also here
  repeated GaussRiderRaw gauss_rider_data=4; // Unprocessed gauss rider's data
  map<uint32, Bfield> bfields=5;
}

message TelemetryData {
  SensorData sensor_data=1;
  repeated double pose_estimation=2;
}

message Bfield {
  repeated double bfield=1; // Bfield vector, pxs: 0, 1, 2, 3, axes: x, y, z, in teslas
}

message TelemetryDataResponse {
  TelemetryData data = 1;
  clone.data_types.ServerResponse response_data=2;
}

enum TelemetryConfig {
  PRESSURE = 0;
  IMU = 1;
  ALL = 2;
}

message PressureSensorCalibration {
  int32 min = 1;
  int32 max = 2;
}

message CalibrationData {
  repeated PressureSensorCalibration pressure_sensors=1;
}

message PoseEstimationInfo {
  message MagInterpInfo {
    message MagMapPosition {
      repeated double angles_rad = 1; // 2vec of angles
      repeated double bfields_teslas = 2; // 12vec of bfields
    }
    message MagMapJointEntry {
      optional string axis0name = 1;
      optional string axis1name = 2;
      uint32 gauss_rider_id = 3; // nodeid of corresponding gauss rider
      repeated MagMapPosition angle_bfield_points = 4;
    }
    map<string, MagMapJointEntry> magmap = 1;
  }
  uint32 qpos_len = 1;
  optional MagInterpInfo maginterp = 2;
}

message Vec3 {
  double x = 1;
  double y = 2;
  double z = 3;
}

message Joint {
  message Axis {
    uint32 qpos_idx = 1;
    optional Vec3 axis = 2;
  }
  map<string, Axis> axes = 1;
}

message SystemInfo {
  message MuscleInfo {
    uint32 index = 1;
    uint32 node_id = 2;
    uint32 channel_id = 3;
  }

  map<string, MuscleInfo> muscles=2;
  // repeated ImuMappingModel imus=3;
  CalibrationData calibration_data=4;
  TelemetryConfig telemetry_config=5;
  map<string, Joint> joints=6;
  optional PoseEstimationInfo pose_estimation=7;
}

message SystemInfoResponse {
  SystemInfo info=1;
  clone.data_types.ServerResponse response=2;
}
